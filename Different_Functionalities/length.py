#!/usr/bin/env python3

# The Main Idea from the script is that it takes from you the directory path as an argument and then digging in it and extract the whole videos with it's length and prints each one at a line with it's length and prints the total duration and the total length of all the videos at the end of the output.


import os
import subprocess
import sys
import argparse



total_hours = 0
total_minutes = 0
total_seconds = 0

video_extensions = [
    '.mp4', '.ts', '.asf', '.asx', '.avc', '.avi', '.bdmv', '.bin', '.bivx', '.bup',
    '.cam', '.dat', '.divx', '.dpg', '.dv', '.dvr-ms', '.evo', '.f4v', '.flv', '.gsm',
    '.h264', '.hdmov', '.hdv', '.hevc', '.ifo', '.ismv', '.jpm', '.k3g', '.m1v', '.m2p',
    '.m2ts', '.m2v', '.m4v', '.mkv', '.mov', '.3gp', '.mpeg', '.mpeg1', '.mpeg2', '.mpeg4',
    '.mpg', '.mts', '.nsv', '.nuv', '.ogg', '.ogm', '.ogv', '.ogx', '.ps', '.rec',
    '.rm', '.rmvb', '.rpl', '.sdp', '.swf', '.tivo', '.tod', '.tp', '.3g2', '.vob',
    '.vp6', '.webm', '.wm', '.wmv', '.wtv', '.xesc'
]



def get_arguments():
    parser = argparse.ArgumentParser(description="Process The Inputs")
    parser.add_argument("-p", "--path", dest="path", help="Path that Contains the Videos.")
    options = parser.parse_args()
    if not options.path:
        parser.error("[-] Please specify Directory Path")

    return options



def chdir_to_path():

    try:
        directory_path = get_arguments().path
        os.chdir(directory_path)
        return directory_path

    except:
        print("\nPlease Enter Valid Directory")
        sys.exit()



def directory_crawl():

    """directory_crawl method running the program and returns number_of_videos after Traversing through the Path"""


    is_there_at_least_one_file = False
    number_of_videos = 0

    for root, dirs, files in os.walk(chdir_to_path()):

        for file in files:

            for extension in video_extensions:

                if file.endswith(extension):

                    is_there_at_least_one_file = True
                    number_of_videos += 1
                    file_path = os.path.join(root, file)
                    # Get duration in milliseconds and convert to minutes and seconds
                    duration = int(subprocess.check_output(["mediainfo", "--Inform=Video;%Duration%", file_path]))

                    # if it was bytes strings so convert it to string then int
                    if isinstance(duration, bytes):
                        duration_str = duration.decode().strip()
                        duration = int(duration_str)


                    hours = duration // (1000 * 60 * 60)
                    minutes = (duration // (1000 * 60)) % 60
                    seconds = (duration // 1000) % 60

                                        
                    if hours:
                        time = f"{file_path}: \t {hours} hours, {minutes} minutes, {seconds} seconds"
                    elif minutes:
                        time = f"{file_path}: \t {minutes} minutes, {seconds} seconds"
                    else:
                        time = f"{file_path}: \t {seconds} seconds"

                    print(time)

                    sum_time(hours, minutes, seconds)

                    break


    if not is_there_at_least_one_file:
        print(f"\nNo Videos found in this directory.")
        sys.exit(1)

    return number_of_videos




def sum_time(hours, minutes, seconds):

    global total_hours, total_minutes, total_seconds

    # Convert total time to seconds
    total_time_seconds = total_hours * 3600 + total_minutes * 60 + total_seconds

    # Add new duration to total time in seconds
    new_duration_seconds = hours * 3600 + minutes * 60 + seconds
    total_time_seconds += new_duration_seconds

    # Convert total time back to hours, minutes, and seconds
    total_hours = total_time_seconds // 3600
    total_minutes = (total_time_seconds // 60) % 60
    total_seconds = total_time_seconds % 60


def print_total_time():

    global total_hours, total_minutes, total_seconds
    print(f"Total duration: {total_hours} hours, {total_minutes} minutes, {total_seconds} seconds")



chdir_to_path()
number_of_videos = directory_crawl()
print(f"\n\nNumber of Videos is: {number_of_videos}")
print_total_time()



# Usage:
# sudo ./length.py -p path/to/your/directory
